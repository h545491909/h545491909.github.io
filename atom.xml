<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>引流觞曲水 墨谁人心扉</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-17T19:56:11.099Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>流墨</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>主页</title>
    <link href="http://yoursite.com/2020/02/17/hello-world/"/>
    <id>http://yoursite.com/2020/02/17/hello-world/</id>
    <published>2020-02-17T10:00:12.467Z</published>
    <updated>2020-02-17T19:56:11.099Z</updated>
    
    <content type="html"><![CDATA[<h1 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h1><h2 id="练习记录"><a href="#练习记录" class="headerlink" title="练习记录"></a>练习记录</h2><h3 id="深度搜索"><a href="#深度搜索" class="headerlink" title="深度搜索"></a>深度搜索</h3><h4 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h4><p>给定一个整数n，将数字1~n排成一排，将会有很多种排列方法。现在，请你按照字典序将所有的排列方法输出。</p><p><strong>输入格式</strong><br>共一行，包含一个整数n。</p><p><strong>输出格式</strong><br>按字典序输出所有排列方案，每个方案占一行。</p><p><strong>数据范围</strong><br>1≤n≤7<br><strong>输入样例：</strong><br>3<br><strong>输出样例：</strong><br>1 2 3<br>1 3 2<br>2 1 3<br>2 3 1<br>3 1 2<br>3 2 1</p><p>1.dfs进行递归，表示的意义？<br>2.如何加深对dfs的理解（求法）？<br>3.为何回溯时，进行现场的恢复？<br>此题中dfs表示的含义是：求出从第u行到最后一行的所有path。<br>dfs的求法：根据通项公式的含义，假设已知第u+1行到最后一行的所有path，综合1和2得出：path[u] 与 path[u+1] 合并后，即为dfs的解。<br>回溯的特征是：递归的最外层是一个循环。因为一次dfs得到的是所有的path。每一次都是从当前现场中去取得剩下未访问的元素。（这一块自己画个图就很容易理解）。<br>反证：如果不进行现场的恢复，则在第一次完成深搜后，所有元素都已经被访问过了。这样在回溯到上一层时，上层的现场中的状态都被下层更改了，数据就会乱套。</p><p><strong>代码实现</strong>  </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> path[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">bool</span> st[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span><span class="comment">//计算路径</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>（u == u）&#123;<span class="comment">//走到底</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,path[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!st[i])&#123;</span><br><span class="line">                path[u] = i;</span><br><span class="line">                st[i] = <span class="literal">true</span>;</span><br><span class="line">                dfs(u + <span class="number">1</span>);<span class="comment">//回溯</span></span><br><span class="line">                path[u] = <span class="number">0</span>;</span><br><span class="line">                st[i] = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    dfs(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;小记&quot;&gt;&lt;a href=&quot;#小记&quot; class=&quot;headerlink&quot; title=&quot;小记&quot;&gt;&lt;/a&gt;小记&lt;/h1&gt;&lt;h2 id=&quot;练习记录&quot;&gt;&lt;a href=&quot;#练习记录&quot; class=&quot;headerlink&quot; title=&quot;练习记录&quot;&gt;&lt;/a&gt;练习记录&lt;/h
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
